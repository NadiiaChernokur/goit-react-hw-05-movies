{"version":3,"file":"static/js/208.ee7b28ec.chunk.js","mappings":"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","sources":["components/Film/Film.styled.js","components/Film/Film.js","components/Film/FilmDetails.styled.js","components/Film/FilmDetails.js"],"sourcesContent":["import styled from 'styled-components';\nexport const FilmContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const FilmMain = styled.div`\n  display: flex;\n  gap: 20px;\n  box-shadow: 0px 3px 0px 0px #046c44;\n  padding-bottom: 14px;\n`;\n\nexport const Paragraf = styled.p`\n  color: #ff1a75;\n  cursor: pointer;\n  margin-left: 40px;\n`;\n","import { Link, Outlet } from 'react-router-dom';\nimport { FilmContainer, FilmMain, Paragraf } from './Film.styled';\n\nconst Film = ({ film }) => {\n  return (\n    <FilmContainer>\n      <FilmMain>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${film.poster_path}`}\n          alt={film.title ? film.title : film.name}\n          width={240}\n        ></img>\n        <div>\n          <h1>{film.title ? film.title : film.name}</h1>\n          <p>User score: {film.popularity * 100} %</p>\n          <p>\n            <b>Overview</b>\n          </p>\n          <p>{film.overview}</p>\n          <p>\n            <b>Genres</b>\n          </p>\n          <p>{'film.genres[0].name'}</p>\n        </div>\n      </FilmMain>\n      <div>\n        <p>Additional information</p>\n        <Link to=\"cast\">\n          <Paragraf>\n            <b>Cast</b>\n          </Paragraf>\n        </Link>\n        <Link to=\"reviews\">\n          <Paragraf>\n            <b>Reviews</b>\n          </Paragraf>\n        </Link>\n      </div>\n      <Outlet />\n    </FilmContainer>\n  );\n};\n\nexport default Film;\n","import styled from 'styled-components';\nexport const Button = styled.button`\n  margin-bottom: 14px;\n  padding: 6px;\n  width: 100px;\n  background-color: #ffccff;\n  color: #009900;\n  font-weight: bold;\n  cursor: pointer;\n`;\n","import { Link, useLocation, useParams } from 'react-router-dom';\nimport { getMoviesId } from '../Getmovies';\nimport { useEffect, useRef, useState } from 'react';\nimport Film from './Film';\nimport { Button } from './FilmDetails.styled';\n\nconst FilmDetails = () => {\n  const { movieId } = useParams();\n  const [film, setFilm] = useState([]);\n  const location = useLocation();\n\n  const ref = useRef(location.state);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getMoviesId(movieId);\n\n        setFilm(response.data);\n      } catch (error) {\n        console.error('Помилка отримання даних', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={ref.current?.visibleLocation || '/movies'}>\n        <Button type=\"button\">On back</Button>\n      </Link>\n      <Film film={film} />\n    </div>\n  );\n};\n\nexport default FilmDetails;\n"],"names":["FilmContainer","styled","_templateObject","_taggedTemplateLiteral","FilmMain","_templateObject2","Paragraf","_templateObject3","_ref","film","_jsxs","children","_jsx","src","concat","poster_path","alt","title","name","width","popularity","overview","Link","to","Outlet","Button","_ref$current","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setFilm","location","useLocation","ref","useRef","state","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getMoviesId","sent","data","t0","console","error","stop","apply","arguments","current","visibleLocation","type","Film"],"sourceRoot":""}