{"version":3,"file":"static/js/651.f7b6a24b.chunk.js","mappings":"oKAcA,IAZqB,SAAHA,GAAmB,IAAbC,EAAKD,EAALC,MAChBC,GAAkBC,EAAAA,EAAAA,MAGxB,OAAOF,EAAMG,KAAI,SAAAC,GACf,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaJ,EAAKK,IAAMC,MAAO,CAAET,gBAAAA,GAAkBU,UACzDN,EAAAA,EAAAA,KAAA,MAAAM,SAAmBP,EAAKQ,MAAQR,EAAKQ,MAAQR,EAAKS,MAAzCT,EAAKK,KAGpB,GACF,C,oKCZaK,EAAOC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kCAGlBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oE,SCQrBG,EALA,OAKMC,EAJH,UAIYC,EAHX,WAgEZ,EA3De,WAAO,IAADC,EACnBC,GAAkCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvCI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA4BL,EAAAA,EAAAA,UAASL,GAAKW,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAnCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAA4BT,EAAAA,EAAAA,YAAUU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAExBG,GAA4BC,EAAAA,EAAAA,MAAiBC,GAAAb,EAAAA,EAAAA,GAAAW,EAAA,GAAtCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAClBG,EAA4B,QAAtBpB,EAAGkB,EAAOG,IAAI,gBAAQ,IAAArB,EAAAA,EAAI,IAEtCsB,EAAAA,EAAAA,YAAU,WACR,GAAIb,IAAWZ,EAAf,CAIA,IAAM0B,EAAS,eAAA/C,GAAAgD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAgBnB,GAAQ,KAAD,EAAxCc,EAAQE,EAAAI,KAORL,EAAYD,EAASO,KAAKC,QAChC7B,EAAasB,GAAWC,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAAAA,EAAAQ,OAAA,mCAAAR,EAAAS,OAAA,GAAAZ,EAAA,kBAI3B,kBAdc,OAAAlD,EAAA+D,MAAA,KAAAC,UAAA,KAgBfjB,IACAb,EAAUb,EAnBV,CAoBF,GAAG,CAACQ,EAAWe,EAAQP,EAAQJ,IAe/B,OACEgC,EAAAA,EAAAA,MAAA,OAAArD,SAAA,EACEqD,EAAAA,EAAAA,MAAClD,EAAI,CAACmD,SAAU,SAAAC,GAAC,OAVA,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAcF,EAAEG,OAAO,GAAGC,MAChC7B,EAAU,CAAE8B,MAAOH,IACnBhC,EAAUgC,GACVpC,EAAUZ,EACZ,CAIyBoD,CAAaP,EAAE,EAACvD,SAAA,EACnCN,EAAAA,EAAAA,KAAA,aAEAA,EAAAA,EAAAA,KAAA,UAAQqE,KAAK,SAAQ/D,SAAC,cAEvBqB,IAAWX,IAAWhB,EAAAA,EAAAA,KAAA,OAAAM,SAAK,8EAC3BqB,IAAWV,IAAYjB,EAAAA,EAAAA,KAAA,OAAAM,SAAK,uKAC7BN,EAAAA,EAAAA,KAACa,EAAI,CAAAP,SAAEiB,EAAU+C,OAAS,IAAKtE,EAAAA,EAAAA,KAACuE,EAAAA,EAAY,CAAC5E,MAAO4B,QAG1D,C","sources":["components/Film/VisibleArray.js","components/Movies.styled.js","pages/Movies.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nconst VisibleArray = ({ array }) => {\n  const visibleLocation = useLocation();\n  // console.log(visibleLocation);\n\n  return array.map(film => {\n    return (\n      <Link to={`/movies/${film.id}`} state={{ visibleLocation }}>\n        <li key={film.id}>{film.title ? film.title : film.name}</li>\n      </Link>\n    );\n  });\n};\nexport default VisibleArray;\n","import styled from 'styled-components';\nexport const Form = styled.form`\n  margin-bottom: 20px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { useEffect, useState } from 'react';\nimport { getFilterMovies } from 'components/Getmovies';\nimport VisibleArray from 'components/Film/VisibleArray';\nimport { useSearchParams } from 'react-router-dom';\nimport { Form, List } from 'components/Movies.styled';\n\nconst STATUS = {\n  IDEL: 'idel',\n  PENDING: 'pending',\n  REJECTED: 'rejected',\n  RESOLVD: 'resolved',\n};\nconst { IDEL, PENDING, REJECTED } = STATUS;\n\nconst Movies = () => {\n  const [allMovies, setAllMovies] = useState([]);\n  const [status, setStatus] = useState(IDEL);\n  const [result, setResalt] = useState();\n\n  const [params, setParams] = useSearchParams();\n  const filter = params.get('query') ?? '';\n\n  useEffect(() => {\n    if (status === IDEL) {\n      return;\n    }\n\n    const fetchData = async () => {\n      try {\n        const response = await getFilterMovies(result);\n        // const rej = response.data.total_results;\n\n        // if (rej === 0) {\n        //   setStatus(REJECTED);\n        //   return;\n        // }\n        const trendFilm = response.data.results;\n        setAllMovies(trendFilm);\n      } catch (error) {\n        return;\n      }\n    };\n\n    fetchData();\n    setStatus(IDEL);\n  }, [allMovies, filter, result, status]);\n\n  //   const toFilterArray = () => {\n  //     // setAllMovies([]);\n  //     // setStatus(CHENGE);\n  //   };\n\n  const visibleArray = e => {\n    e.preventDefault();\n    const filterValue = e.target[0].value;\n    setParams({ query: filterValue });\n    setResalt(filterValue);\n    setStatus(PENDING);\n  };\n\n  return (\n    <div>\n      <Form onSubmit={v => visibleArray(v)}>\n        <input></input>\n\n        <button type=\"submit\">Search</button>\n      </Form>\n      {status === PENDING && <div> Завантажуємо</div>}\n      {status === REJECTED && <div> По вашому запиту немає фільмів</div>}\n      <List>{allMovies.length > 0 && <VisibleArray array={allMovies} />}</List>\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["_ref","array","visibleLocation","useLocation","map","film","_jsx","Link","to","concat","id","state","children","title","name","Form","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","IDEL","PENDING","REJECTED","_params$get","_useState","useState","_useState2","_slicedToArray","allMovies","setAllMovies","_useState3","_useState4","status","setStatus","_useState5","_useState6","result","setResalt","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","filter","get","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","_callee","response","trendFilm","_context","prev","next","getFilterMovies","sent","data","results","t0","abrupt","stop","apply","arguments","_jsxs","onSubmit","v","e","preventDefault","filterValue","target","value","query","visibleArray","type","length","VisibleArray"],"sourceRoot":""}